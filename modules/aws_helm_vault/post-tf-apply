#!/bin/bash -x
#
# grab AWS creds for auto unsealing using KMS 
#
kubectl -n demo create secret generic kms-creds \
    --from-literal=AWS_ACCESS_KEY_ID="$(<~/.aws/credentials egrep "^aws_access_key_id" | cut -d' ' -f3)" \
    --from-literal=AWS_SECRET_ACCESS_KEY="$(<~/.aws/credentials egrep "^aws_secret_access_key" | cut -d' ' -f3)"
sleep 15
#
# Initialize and unseal vault-0
#
kubectl -n demo exec vault-0 -- vault operator init \
    -key-shares=5 \
    -key-threshold=3 \
    -format=json > cluster-keys.json

#
# Store keys in kubes
#
kubectl -n demo create secret generic hashivault \
  --from-literal=unseal_keys="$(<cluster-keys.json jq -r '.recovery_keys_b64[]')" \
  --from-literal=root_token="$(<cluster-keys.json jq -r '.root_token')"

#
# Delete the file... if you dare
#
#rm cluster-keys.json

sleep 15

#
# Join the nodes
#
kubectl -n demo exec vault-1 -- vault operator raft join http://vault-0.vault-internal:8200
kubectl -n demo exec vault-2 -- vault operator raft join http://vault-0.vault-internal:8200

sleep 15

#
# Sanity Checks
# 
kubectl -n demo exec vault-0 -- vault login $(kubectl -n demo get secret hashivault -o json | jq -r '.data.root_token' | base64 -d)
kubectl -n demo exec vault-0 -- vault operator raft list-peers

#
# setup AWS engine
#
kubectl -n demo exec vault-0 -- vault secrets enable aws

#
# configure AWS secrets engine
#
kubectl -n demo exec vault-0 -- vault write aws/config/root \
    access_key=$(kubectl -n demo get secret kms-creds -o json | jq -r '.data.AWS_ACCESS_KEY_ID' | base64 -d) \
    secret_key=$(kubectl -n demo get secret kms-creds -o json | jq -r '.data.AWS_SECRET_ACCESS_KEY' | base64 -d) \
    region=us-west-1

#
# create test my-role
#
kubectl -n demo exec vault-0 -- vault write aws/roles/my-role \
    credential_type=iam_user \
    policy_document=-<<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": "ec2:*",
      "Resource": "*"
    }
  ]
}
EOF

#
# create test my-other-role
#
vault write aws/roles/my-other-role \
    policy_arns=arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess,arn:aws:iam::aws:policy/IAMReadOnlyAccess \
    iam_groups=group1,group2 \
    credential_type=iam_user \
    policy_document=-<<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": "ec2:*",
      "Resource": "*"
    }
  ]
}
EOF

#
# Generate AWS creds for my-role
#
kubectl -n demo exec vault-0 -- vault read aws/creds/my-role

